{"version":3,"file":"bundle.js","sources":["../../../../node_modules/svelte/internal/index.mjs","../../../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../../../node_modules/@ivanheriver/section-resizer/dist/bundle.js","../../src/Components/Tasks.svelte","../../src/Components/Tags.svelte","../../src/Components/Timer.svelte","../../src/Components/Project.svelte","../../src/Components/NewProject.svelte","../../src/Components/Projects.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.5' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {Writable, writable} from \"svelte/store\"\r\nimport type { tmProject } from \"./types\"\r\n\r\nexport const projects: Writable<Array<tmProject>> = writable([])\r\n\r\n// export const projID: Writable<number> = writable(null)\r\n\r\n","function createSeparators(parent, n_children, mode) {\r\n    const anchor_size = \"20px\";\r\n    if (n_children === 0)\r\n        return [];\r\n    const separators = Array(n_children - 1)\r\n        .fill(\"\")\r\n        .map((_) => {\r\n        const element = createSep(mode, anchor_size);\r\n        const onHighlightCallbacks = new Set();\r\n        let state = \"idle\";\r\n        function update(loc) {\r\n            if (mode === \"horizontal\") {\r\n                element.style.left = `calc(${loc})`;\r\n            }\r\n            else {\r\n                element.style.top = `calc(${loc})`;\r\n            }\r\n        }\r\n        function setState(new_state) {\r\n            state = new_state;\r\n        }\r\n        function setHighlight(yes = true) {\r\n            onHighlightCallbacks.forEach((c) => c(yes));\r\n            element.children[0].classList.toggle(\"sr-separator-highlight\", yes);\r\n        }\r\n        element.addEventListener(\"pointerenter\", () => {\r\n            if (state === \"idle\")\r\n                setHighlight(true);\r\n        });\r\n        element.addEventListener(\"pointerleave\", () => {\r\n            if (state === \"idle\")\r\n                setHighlight(false);\r\n        });\r\n        return {\r\n            element,\r\n            position: 0,\r\n            initial_position: 0,\r\n            update,\r\n            setState,\r\n            setHighlight,\r\n            on(event, callback) {\r\n                if (event === \"highlight\") {\r\n                    onHighlightCallbacks.add(callback);\r\n                }\r\n                else {\r\n                    console.warn(`'${event}' is an unknown event name for a separator. Ignored.`);\r\n                }\r\n            },\r\n            off(event, callback = null) {\r\n                if (event === \"highlight\") {\r\n                    if (callback === null) {\r\n                        onHighlightCallbacks.clear();\r\n                    }\r\n                    else {\r\n                        onHighlightCallbacks.delete(callback);\r\n                    }\r\n                }\r\n                else {\r\n                    console.warn(`'${event}' is an unknown event name for a separator. Ignored.`);\r\n                }\r\n            },\r\n        };\r\n    });\r\n    separators.forEach((e) => parent.append(e.element));\r\n    return separators;\r\n}\r\nfunction createSep(mode, anchor_size) {\r\n    const sep = document.createElement(\"div\");\r\n    sep.classList.add(\"sr-separator-anchor\");\r\n    sep.style.position = \"absolute\";\r\n    sep.style.display = \"flex\";\r\n    sep.style.justifyContent = \"center\";\r\n    sep.style.top = \"0px\";\r\n    sep.style.left = \"0px\";\r\n    // sep.style.backgroundColor = \"rgb(255, 0, 0, 0.1)\";\r\n    if (mode === \"horizontal\") {\r\n        sep.style.height = \"100%\";\r\n        sep.style.width = anchor_size;\r\n        sep.style.flexDirection = \"row\";\r\n        sep.style.transform = `translateX(calc(-${anchor_size} / 2))`;\r\n        sep.style.cursor = \"e-resize\";\r\n    }\r\n    else if (mode === \"vertical\") {\r\n        sep.style.width = \"100%\";\r\n        sep.style.height = anchor_size;\r\n        sep.style.flexDirection = \"column\";\r\n        sep.style.transform = `translateY(calc(-${anchor_size} / 2))`;\r\n        sep.style.cursor = \"n-resize\";\r\n    }\r\n    const handle = document.createElement(\"div\");\r\n    handle.classList.add(\"sr-separator\");\r\n    if (mode === \"horizontal\") {\r\n        handle.style.height = \"100%\";\r\n    }\r\n    else if (mode === \"vertical\") {\r\n        handle.style.width = \"100%\";\r\n    }\r\n    sep.append(handle);\r\n    return sep;\r\n}\r\n\r\nfunction sum(array) {\r\n    return array.reduce((a, c) => a + c, 0);\r\n}\r\nfunction updateSectionSizes(sections, new_sizes, container_size) {\r\n    // make sure that the new sizes are larger than min sizes\r\n    new_sizes = new_sizes.map((e, i) => e === null ? null : Math.max(sections[i].min_size, e));\r\n    // make sure that the new sizes are smaller than max sizes\r\n    new_sizes = new_sizes.map((e, i) => e === null ? null : Math.min(sections[i].max_size, e));\r\n    // compute the reference space i.e. the available\r\n    // space to place the sections\r\n    const reference_space = Math.max(Math.min(container_size, sum(sections.map((e) => e.max_size))), sum(sections.map((e) => e.min_size)));\r\n    // at the stage, we know:\r\n    // sum(min_sizes)<=reference_space<=sum(max_sizes)\r\n    // min_size[i] <= new_sizes[i] <= max_size[i]\r\n    // ... except when new_sizes[i] === null (=0)\r\n    // therefore:\r\n    // sum(new_size) <= sum(max_size) but sum(new_size) can be greater than reference_space...\r\n    // get the indices of unknown new sizes\r\n    // and set unknwon new sizes to minimum sizes\r\n    const unknown_indices = [];\r\n    new_sizes = new_sizes.map((e, i) => {\r\n        if (e === null) {\r\n            unknown_indices.push(i);\r\n            return sections[i].min_size;\r\n        }\r\n        else {\r\n            return e;\r\n        }\r\n    });\r\n    if (unknown_indices.length > 0) {\r\n        // if there is unknown new sizes\r\n        let sum_new_sizes = sum(new_sizes);\r\n        if (sum_new_sizes < reference_space) {\r\n            // if the sum of the new sizes below the reference space, we try to grow the unkown sizes as much as possible\r\n            const growth_to_distribute = reference_space - sum_new_sizes;\r\n            const unknown_new_sizes = scaleUpSizes(new_sizes.filter((_, i) => unknown_indices.includes(i)), sections\r\n                .map((e, i) => e.max_size - new_sizes[i])\r\n                .filter((_, i) => unknown_indices.includes(i)), growth_to_distribute);\r\n            let k = 0;\r\n            new_sizes = new_sizes.map((e, i) => {\r\n                if (unknown_indices.includes(i)) {\r\n                    k++;\r\n                    return unknown_new_sizes[k - 1];\r\n                }\r\n                return e;\r\n            });\r\n        }\r\n    }\r\n    // If needed, adjuste the new sizes by scaling down or up\r\n    // the new_sizes while enforcing the min and max sizes specified\r\n    const space_to_adjust = sum(new_sizes) - reference_space;\r\n    if (space_to_adjust > 0) {\r\n        new_sizes = scaleDownSizes(new_sizes, new_sizes.map((e, i) => e - sections[i].min_size), space_to_adjust);\r\n    }\r\n    else if (space_to_adjust < 0) {\r\n        new_sizes = scaleUpSizes(new_sizes, new_sizes.map((e, i) => sections[i].max_size - e), -space_to_adjust);\r\n    }\r\n    // update the sections\r\n    return sections.map((e, i) => (Object.assign(Object.assign({}, e), { cur_size: new_sizes[i] })));\r\n}\r\nfunction scaleUpSizes(new_sizes, max_growth, space_to_fill) {\r\n    // let's try and grow everything equally\r\n    let avg_growth = space_to_fill / max_growth.length;\r\n    let n_infinite_max = 0;\r\n    let growth = max_growth.map((e) => {\r\n        if (isFinite(e)) {\r\n            return Math.min(avg_growth, e);\r\n        }\r\n        else {\r\n            n_infinite_max++;\r\n            return avg_growth;\r\n        }\r\n    });\r\n    let remaining_space_to_fill = space_to_fill - sum(growth);\r\n    // in case there are some elements with no finite maximum\r\n    // and there is still some space to fill, distribute the\r\n    // remaining space between these elements\r\n    if (n_infinite_max > 0 && remaining_space_to_fill !== 0) {\r\n        avg_growth = remaining_space_to_fill / n_infinite_max;\r\n        growth = growth.map((e, i) => {\r\n            if (isFinite(max_growth[i]))\r\n                return e;\r\n            return e + avg_growth;\r\n        });\r\n        remaining_space_to_fill = space_to_fill - sum(growth);\r\n    }\r\n    return new_sizes.map((e, i) => e + growth[i]);\r\n}\r\nfunction scaleDownSizes(new_sizes, max_shrink, space_to_gain) {\r\n    //max_shrink can be used as weight to distribute space_to_gain\r\n    const sum_max_shrink = sum(max_shrink);\r\n    const spaces_to_remove = max_shrink.map((e) => space_to_gain * (e / sum_max_shrink));\r\n    return new_sizes.map((e, i) => e - spaces_to_remove[i]);\r\n}\r\n\r\nfunction propagateSectionSizeChange(sections, change, backward) {\r\n    if (sections.length === 0)\r\n        return { remaining: 0, sections };\r\n    // when change > 0, we try to grow the sections\r\n    // when chnage < 0, we try to shrink the sections\r\n    let i = backward ? sections.length - 1 : 0;\r\n    while (change != 0 && (backward ? i >= 0 : i < sections.length)) {\r\n        // const max_growth = Number.POSITIVE_INFINITY; // how much it can grow\r\n        const max_growth = sections[i].max_size - sections[i].ini_size; // how much it can grow\r\n        const max_shrink = sections[i].ini_size - sections[i].min_size; // how much it can shrink\r\n        if (change > 0) {\r\n            // growing scenario\r\n            if (change < max_growth) {\r\n                // in case the current element i can absorbe all the growth\r\n                sections[i].cur_size = sections[i].ini_size + change;\r\n                change = 0;\r\n            }\r\n            else {\r\n                sections[i].cur_size = sections[i].ini_size + max_growth;\r\n                change -= max_growth;\r\n            }\r\n        }\r\n        else {\r\n            // skrinking scenario\r\n            if (-change < max_shrink) {\r\n                // in case the current element can absorve all the shrinking\r\n                sections[i].cur_size = sections[i].ini_size + change;\r\n                change = 0;\r\n            }\r\n            else {\r\n                sections[i].cur_size = sections[i].ini_size - max_shrink;\r\n                change += max_shrink;\r\n            }\r\n        }\r\n        i += backward ? -1 : 1;\r\n    }\r\n    return { remaining: change, sections };\r\n}\r\nfunction updateSectionSizesOnResize(sections, index, delta) {\r\n    let old_sections = sections.map((e) => (Object.assign(Object.assign({}, e), { cur_size: e.ini_size })));\r\n    let new_sections = old_sections;\r\n    let remaining = delta;\r\n    let k = 0;\r\n    const max_iteration = 3;\r\n    // console.log(\"-----------------------------------------------\");\r\n    // console.log(\"sections\", sections);\r\n    // console.log(\"old_sections\", old_sections);\r\n    while (remaining !== 0 && k < max_iteration) {\r\n        // console.log(\"remaining\", remaining);\r\n        // console.log(\"delta\", delta);\r\n        k++;\r\n        // handle the resizing of the elements placed before the separator\r\n        const result_before = propagateSectionSizeChange(\r\n        // old_sections.slice(0, index + 1).reverse(),\r\n        old_sections.slice(0, index + 1), delta, true);\r\n        // console.log(\"result_before\", result_before);\r\n        // handle the resizing of the elements placed after the separator\r\n        const result_after = propagateSectionSizeChange(old_sections.slice(index + 1), -delta, false);\r\n        // console.log(\"result_after\", result_after);\r\n        // compute the new sections\r\n        new_sections = [...result_before.sections, ...result_after.sections].map((e) => (Object.assign({}, e)));\r\n        // check that the change was propagated completly\r\n        remaining =\r\n            Math.abs(result_before.remaining) >= Math.abs(result_after.remaining)\r\n                ? result_before.remaining\r\n                : -result_after.remaining;\r\n        // update delta\r\n        delta -= remaining;\r\n        // reset old_sections in case the loop restart\r\n        old_sections = sections.map((e) => (Object.assign(Object.assign({}, e), { cur_size: e.ini_size })));\r\n    }\r\n    return new_sections;\r\n}\r\n\r\n// export type sectionsConfig\r\nconst warn = console.warn;\r\n/**\r\n * This function makes an HTMLElement a sectionResizer where all its children\r\n * can be resized by dragging separators. Each child can have\r\n * two attributes [data-min] and [data-init] which expect pixels values (with no unit)\r\n * that are used to define its minimum and initial size respectively.\r\n *\r\n * @param container  Container where the children to be resized are\r\n * @param config Main configuration options for the section resizer.\r\n * @returns A sectionResizer object.\r\n */\r\nfunction sectionResizer(container, config = {\r\n    mode: \"horizontal\",\r\n    resizeMode: \"distributed\",\r\n}) {\r\n    const default_config = {\r\n        mode: \"horizontal\",\r\n        resizeMode: \"distributed\",\r\n    };\r\n    config = Object.assign(Object.assign({}, default_config), config);\r\n    const mode = config.mode;\r\n    const resizeMode = config.resizeMode;\r\n    let x_y = \"x\";\r\n    let w_h = \"width\";\r\n    if (mode === \"vertical\") {\r\n        x_y = \"y\";\r\n        w_h = \"height\";\r\n    }\r\n    else if (mode !== \"horizontal\") {\r\n        warn(`mode '${mode}' is unknwon. Defaulting to 'horizontal'`);\r\n    }\r\n    let container_size;\r\n    let initial_container_size;\r\n    let sections;\r\n    let separators;\r\n    let resize_observer;\r\n    let mutation_observer;\r\n    init();\r\n    function init() {\r\n        // store the current container size\r\n        container_size = container.getBoundingClientRect()[w_h];\r\n        initial_container_size = container_size;\r\n        // set needed style attributes to the container\r\n        const current_position_style = window.getComputedStyle(container).getPropertyValue(\"position\")\r\n        if (![\"absolute\", \"relative\"].includes(current_position_style)) {\r\n            container.style.position = \"relative\";\r\n        }\r\n        container.style.overflow = \"auto\";\r\n        container.style.display = \"grid\";\r\n        //FIXME: I should get rid of these conditions on padding and margin...\r\n        container.style.padding = \"0\";\r\n        container.style.margin = \"0\";\r\n        // create the event listeners attached to the document element\r\n        // that handle the resizing of the children by dragging the separators\r\n        document.addEventListener(\"pointerdown\", handleResizeStart);\r\n        document.addEventListener(\"pointermove\", handleResizeMove);\r\n        document.addEventListener(\"pointerup\", handleResizeEnd);\r\n        // retrieve the children\r\n        const children = Array.from(container.children);\r\n        // create the sections\r\n        sections = children.map(buildDefaultSection);\r\n        // create the separators\r\n        separators = createSeparators(container, children.length, mode);\r\n        // update the sections sizes\r\n        sections = updateSectionSizes(sections, sections.map((e) => e.cur_size), container_size);\r\n        // sections.forEach((s) => (s.ini_size = s.cur_size));\r\n        setInitialSize();\r\n        // update the grid template\r\n        update();\r\n        // create a ResizeObserver which is run whenever the container\r\n        // changes sizes (e.g. if the window is resized)\r\n        resize_observer = new ResizeObserver((entries) => {\r\n            const new_container_size = container.getBoundingClientRect()[w_h];\r\n            if (new_container_size !== container_size) {\r\n                container_size = new_container_size;\r\n                if (resizeMode !== \"left\" && resizeMode !== \"right\") {\r\n                    sections = updateSectionSizes(sections, sections.map((e) => (e.ini_size / container_size) * new_container_size), new_container_size);\r\n                }\r\n                else {\r\n                    const change_delta = container_size - initial_container_size;\r\n                    if (resizeMode === \"left\") {\r\n                        sections = updateSectionSizesOnResize(sections, -1, -change_delta);\r\n                    }\r\n                    else if (resizeMode === \"right\") {\r\n                        sections = updateSectionSizesOnResize(sections, sections.length, change_delta);\r\n                    }\r\n                }\r\n            }\r\n            update();\r\n            window.requestAnimationFrame(() => {\r\n                update();\r\n            });\r\n        });\r\n        resize_observer.observe(container);\r\n        // create a MutationObserver which is run whenever elements are added to\r\n        // the sectionResizer container or removed from it\r\n        mutation_observer = new MutationObserver(() => {\r\n            // stop listening for changes\r\n            mutation_observer.disconnect();\r\n            // remove the existing separators\r\n            separators.forEach((e) => e.element.remove());\r\n            // retrieve the children\r\n            const children = Array.from(container.children);\r\n            // re-build sections\r\n            const sections_size_sum = sections.reduce((a, c) => a + c.cur_size, 0) / sections.length;\r\n            sections = children.map((e) => {\r\n                const i = sections.findIndex((s) => s.element === e);\r\n                if (i === -1) {\r\n                    const default_section = buildDefaultSection(e);\r\n                    if (!isNaN(sections_size_sum))\r\n                        default_section.cur_size = sections_size_sum;\r\n                    return default_section;\r\n                }\r\n                else {\r\n                    return Object.assign({}, sections[i]);\r\n                }\r\n            });\r\n            // create the separators\r\n            separators = createSeparators(container, children.length, mode);\r\n            // update the sections sizes\r\n            sections = updateSectionSizes(sections, sections.map((e) => e.cur_size), container_size);\r\n            // update the grid template\r\n            update();\r\n            // re-observe the container for changes\r\n            mutation_observer.observe(container, { childList: true, subtree: false });\r\n        });\r\n        mutation_observer.observe(container, { childList: true, subtree: false });\r\n    }\r\n    function update() {\r\n        // const container_size = container.getBoundingClientRect()[w_h];\r\n        const gridTemplate = sections\r\n            .map((e) => `${(e.cur_size / container_size) * 100}%`)\r\n            .join(\" \");\r\n        if (mode === \"vertical\") {\r\n            container.style.gridTemplateColumns = \"auto\";\r\n            container.style.gridTemplateRows = gridTemplate;\r\n        }\r\n        else {\r\n            container.style.gridTemplateRows = \"auto\";\r\n            container.style.gridTemplateColumns = gridTemplate;\r\n        }\r\n        // updateSeparators();\r\n        const position = sections\r\n            .reduce((a, c) => [...a, a[a.length - 1] + c.cur_size], [0])\r\n            .slice(1);\r\n        separators.forEach((s, i) => s.update(`${(position[i] / container_size) * 100}%`));\r\n    }\r\n    function buildDefaultSection(element) {\r\n        const min_size = \"min\" in element.dataset\r\n            ? Math.max(parseFloat(element.dataset.min), 50)\r\n            : 50;\r\n        const def_size = \"init\" in element.dataset\r\n            ? Math.max(min_size, parseFloat(element.dataset.init))\r\n            : null;\r\n        const max_size = \"max\" in element.dataset\r\n            ? Math.max(min_size, parseFloat(element.dataset.max))\r\n            : Number.POSITIVE_INFINITY;\r\n        return {\r\n            element: element,\r\n            min_size: min_size,\r\n            max_size: max_size,\r\n            def_size: def_size,\r\n            cur_size: def_size,\r\n            ini_size: def_size,\r\n        };\r\n    }\r\n    const styleTag = document.createElement(\"style\");\r\n    styleTag.media = \"screen\";\r\n    styleTag.textContent = `* {cursor: ${mode === \"vertical\" ? \"n-resize\" : \"e-resize\"} !important}`;\r\n    function setInitialSize() {\r\n        sections = sections.map((e) => (Object.assign(Object.assign({}, e), { \r\n            // ini_size: e.element.getBoundingClientRect()[w_h],\r\n            ini_size: e.cur_size })));\r\n        separators = separators.map((e, i) => {\r\n            e.initial_position = e.element.getBoundingClientRect()[x_y];\r\n            return e;\r\n        });\r\n        initial_container_size = container_size;\r\n    }\r\n    let index;\r\n    function handleResizeStart(event) {\r\n        setInitialSize();\r\n        index = separators.findIndex((s) => s.element === event.target || s.element.children[0] === event.target);\r\n        separators.forEach((s) => s.setState(\"silent\"));\r\n        if (index >= 0) {\r\n            event.preventDefault();\r\n            separators[index].setState(\"resizing\");\r\n            separators[index].setHighlight(true);\r\n            document.head.appendChild(styleTag);\r\n        }\r\n    }\r\n    function handleResizeMove(event) {\r\n        if (index >= 0) {\r\n            const mouse_position = event[x_y];\r\n            const change_delta = mouse_position - (separators[index].initial_position + 10);\r\n            sections = updateSectionSizesOnResize(sections, index, change_delta);\r\n            update();\r\n        }\r\n    }\r\n    function handleResizeEnd() {\r\n        if (index >= 0) {\r\n            setInitialSize();\r\n            separators[index].setHighlight(false);\r\n            index = -1;\r\n            styleTag.remove();\r\n        }\r\n        separators.forEach((s) => s.setState(\"idle\"));\r\n    }\r\n    function requestAnimationFramePromise() {\r\n        return new Promise((resolve) => {\r\n            requestAnimationFrame(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Configure min and/or max sizes of all sections, or specific sections\r\n     *\r\n     * @param {object[]} config - configuration object\r\n     * @returns A promise that resolve at the next animation frame.\r\n     */\r\n    function configure(config) {\r\n        if (!Array.isArray(config)) {\r\n            config = sections.map((_, index) => (Object.assign({ index }, config)));\r\n        }\r\n        config.forEach((e) => {\r\n            if (e.index !== undefined && e.index >= 0 && e.index < sections.length) {\r\n                if (e.min)\r\n                    sections[e.index].min_size = Math.max(50, e.min); // I enforce 50px as a minimum size to prevent weird behavior with scrollbars and overlapping separators\r\n                if (e.max)\r\n                    sections[e.index].max_size = Math.max(0, e.max);\r\n            }\r\n        });\r\n        sections = updateSectionSizes(sections, sections.map((e) => e.cur_size), container_size);\r\n        update();\r\n        setInitialSize();\r\n        return requestAnimationFramePromise();\r\n    }\r\n    function resize(config) {\r\n        // requestAnimationFrame(() => {\r\n        const new_sizes = sections.map((e) => null);\r\n        config.forEach((e) => {\r\n            if (e.index !== undefined &&\r\n                e.index >= 0 &&\r\n                e.index < sections.length &&\r\n                e.size !== undefined) {\r\n                new_sizes[e.index] = e.size;\r\n            }\r\n        });\r\n        console.log(\"new_sizes\", new_sizes);\r\n        sections = updateSectionSizes(sections, new_sizes, container_size);\r\n        update();\r\n        setInitialSize();\r\n        // });\r\n        return requestAnimationFramePromise();\r\n    }\r\n    function getSections() {\r\n        return sections;\r\n    }\r\n    return {\r\n        configure,\r\n        resize,\r\n        getSections,\r\n    };\r\n}\r\n\r\nexport { sectionResizer as default };\r\n","<script lang=\"ts\">\r\n</script>\r\n\r\n<div class=\"container\">Tasks</div>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n</script>\r\n\r\n<div class=\"container\">Tags</div>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n</script>\r\n\r\n<div class=\"container\">Timer</div>\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n  import sectionResizer from \"@ivanheriver/section-resizer\";\r\n  import Tasks from \"./Tasks.svelte\";\r\n  import Tags from \"./Tags.svelte\";\r\n  import Timer from \"./Timer.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  export let project;\r\n\r\n  onMount(() => {\r\n    projectElementResizer = sectionResizer(projectElement, {\r\n      mode: \"vertical\",\r\n    });\r\n    projectElementResizer.configure([{ index: 0, min: 25, max: 300 }]);\r\n    projectElementResizer.resize([{ index: 1, size: 10000 }]);\r\n    mainElementResizer = sectionResizer(mainElement, {\r\n      mode: \"horizontal\",\r\n    });\r\n    mainElementResizer.configure({ min: 200 });\r\n  });\r\n  let taskPanel = true;\r\n  let tagPanel = true;\r\n  let timerPanel = true;\r\n\r\n  let projectElement, projectElementResizer;\r\n  let mainElement, mainElementResizer;\r\n</script>\r\n\r\n<div class=\"project\" bind:this={projectElement}>\r\n  <div class=\"info\">\r\n    <div class=\"name\">\r\n      {project.name}\r\n    </div>\r\n    <div class=\"desc\">{project.description}</div>\r\n  </div>\r\n  <div class=\"content\">\r\n    <div class=\"sidebar\">\r\n      <button\r\n        class:selected={taskPanel}\r\n        on:click={() => (taskPanel = !taskPanel)}>task</button\r\n      >\r\n      <button class:selected={tagPanel} on:click={() => (tagPanel = !tagPanel)}\r\n        >tag</button\r\n      >\r\n      <button\r\n        class:selected={timerPanel}\r\n        on:click={() => (timerPanel = !timerPanel)}>timer</button\r\n      >\r\n    </div>\r\n    <div class=\"main\" bind:this={mainElement}>\r\n      {#if taskPanel}\r\n        <Tasks />\r\n      {/if}\r\n      {#if tagPanel}\r\n        <Tags />\r\n      {/if}\r\n      {#if timerPanel}\r\n        <Timer />\r\n      {/if}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .project {\r\n    background-color: var(--btn-background-selected);\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n  .content {\r\n    display: grid;\r\n    grid-template-columns: 50px auto;\r\n    background-color: var(--background-color);\r\n  }\r\n  .sidebar {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-right: 1px solid var(--outline-color);\r\n    background-color: var(--btn-background-selected);\r\n  }\r\n  .info {\r\n    padding: 1rem;\r\n    overflow: auto;\r\n  }\r\n  .name {\r\n    font-weight: 900;\r\n  }\r\n  .selected {\r\n    background-color: var(--btn-background-selected);\r\n  }\r\n  .selected:hover,\r\n  .selected:focus {\r\n    background-color: var(--btn-background-highlight);\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { projects } from \"../stores\";\r\n  import type { tmProject } from \"../types\";\r\n  import { createEventDispatcher, onMount } from \"svelte\";\r\n  const eventDispatcher = createEventDispatcher();\r\n  function createNewProject() {\r\n    projects.update((prevProjects: Array<tmProject>): Array<tmProject> => {\r\n      newProject = {\r\n        id: id,\r\n        name: name,\r\n        description: description,\r\n        filePath: null,\r\n        state: \"unsaved\",\r\n        tasks: [],\r\n        tags: [],\r\n        timer: null,\r\n        created: new Date(),\r\n        updated: new Date(),\r\n      };\r\n      return [...prevProjects, newProject];\r\n    });\r\n    eventDispatcher(\"done\", newProject);\r\n  }\r\n  onMount(() => {\r\n    projectNameInputElement.focus();\r\n  });\r\n  const id: string = Math.random().toString().slice(2);\r\n  let newProject: tmProject;\r\n  // let name = `Untitled-${id}`;\r\n  let name = \"\";\r\n  let description = \"\";\r\n  let projectNameInputElement;\r\n</script>\r\n\r\n<div class=\"disabling-overlay\" />\r\n<div class=\"outside\">\r\n  <div class=\"inside\">\r\n    <!-- <form on:submit|preventDefault={createNewProject}> -->\r\n    <div class=\"title\">Create a new project</div>\r\n    <label for=\"name\">Project name:</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      bind:value={name}\r\n      placeholder=\"Write the project name here\"\r\n      on:keyup={(event) => {\r\n        if (event.key === \"Enter\") {\r\n          createNewProject();\r\n        }\r\n      }}\r\n      bind:this={projectNameInputElement}\r\n    />\r\n    <label for=\"description\">Project description:</label>\r\n    <textarea\r\n      rows=\"5\"\r\n      cols=\"33\"\r\n      name=\"description\"\r\n      id=\"description\"\r\n      bind:value={description}\r\n      placeholder=\"Write a project description here\"\r\n    />\r\n    <div class=\"actions\">\r\n      <button\r\n        id=\"cancel\"\r\n        on:click={() => {\r\n          eventDispatcher(\"done\");\r\n        }}>Cancel</button\r\n      >\r\n      <button id=\"create\" on:click={createNewProject}>Create project</button>\r\n    </div>\r\n    <!-- </form> -->\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .outside {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 101;\r\n  }\r\n  .inside {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: var(--background-color);\r\n    width: 400px;\r\n    padding: 1rem;\r\n  }\r\n  .title {\r\n    font-size: 1.2rem;\r\n    font-weight: bold;\r\n  }\r\n  .actions {\r\n    padding-top: 1rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n</style>\r\n","<script lang=\"ts\">\r\n  import { projects } from \"../stores\";\r\n  import type { tmProject } from \"../types\";\r\n  import Project from \"./Project.svelte\";\r\n  import NewProject from \"./NewProject.svelte\";\r\n  // export let tabsInfo;\r\n  let currentProject: tmProject = null;\r\n\r\n  function createNewProject() {\r\n    newProject = true;\r\n  }\r\n\r\n  let newProject = false;\r\n</script>\r\n\r\n{#if newProject}\r\n  <NewProject\r\n    on:done={(event) => {\r\n      console.log(event.detail);\r\n      if (event.detail) {\r\n        currentProject = event.detail;\r\n      }\r\n      newProject = false;\r\n    }}\r\n  />\r\n{/if}\r\n\r\n<div class=\"projects\">\r\n  <div class=\"header\">\r\n    {#each $projects as project}\r\n      <button\r\n        class=\"title\"\r\n        class:selected={currentProject === project}\r\n        on:click={() => {\r\n          currentProject = project;\r\n        }}\r\n      >\r\n        {project.state === \"saved\" ? project.name : `${project.name}*`}\r\n      </button>\r\n    {/each}\r\n    <button on:click={createNewProject}>+ New Project</button>\r\n  </div>\r\n  <div class=\"content\">\r\n    {#if currentProject !== null}\r\n      <Project project={currentProject} />\r\n    {/if}\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n  .projects {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: grid;\r\n    grid-template-rows: min-content auto;\r\n  }\r\n  .header {\r\n    display: flex;\r\n  }\r\n  .content {\r\n    position: relative;\r\n  }\r\n  button {\r\n    border: none;\r\n  }\r\n  .selected {\r\n    background-color: var(--btn-background-selected);\r\n  }\r\n</style>\r\n","<script>\n  import Projects from \"./Components/Projects.svelte\";\n  import { onMount } from \"svelte\";\n\n  onMount(() => {\n    const shouldUseDarkMode = true;\n    document.documentElement.setAttribute(\n      \"data-theme\",\n      shouldUseDarkMode ? \"dark\" : \"light\"\n    );\n  });\n</script>\n\n<Projects />\n\n<style>\n</style>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n});\n\nexport default app;\n"],"names":["create_if_block_1","create_if_block"],"mappings":"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"}